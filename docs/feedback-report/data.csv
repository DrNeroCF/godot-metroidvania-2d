gamedev,dev,godot,expectations,struggles,topics,tutorial_disliked,tutorial_liked,improve,assignments,comments
professional,professional,personal projects,"Gluing a project's spare parts together into a cohesive game, beyond the basics of making nodes, scripts and individual scenes",Planning and stepping out of prototyping phases,Game feel;Visual effects;Code structure;Project organization,I've not kept up that much with the youtube tutorials,I've not kept up that much with the youtube tutorials,Presentation and some entertainment is key - too many tutorial makers fall into the trap of just talking. InfallibleCode's (more recent) tutorials strike a pretty nice balance.,Yes,
hobbyist,professional,personal projects,,,Visual effects;Code structure;Combat;Project organization;Team work;Artificial intelligence,,,,Yes,
hobbyist,professional,personal projects,,,Game feel;Visual effects;Code structure;Combat;Project organization;Team work;Artificial intelligence,,,,Yes,
student,foundations,never used,To get a solid foundation of game develop,Where to begin when it comes to take a videogame project,Game feel;Code structure;Project organization;Team work,,,,Yes,
hobbyist,completed games,personal projects,"1. Create a character that feels good to control. Since a lot of Metroidvanias are pretty fast and let the player get the ""flow"", a character that felt responsive and fun to control seems one the major point of a metroidvania. If you had try games like hollow knight, dead cells or metroid fusion, character are agile and respond really fast. They can jump, double jump, wall jump, roll, dash etc...

2. How to improve my rooms creation workflow. Like in metroid, enemies are not the only danger, there is lava, spikes, moving platform etc... How to create all those items without re-inventing the wheel every time could be great. Also, I don't know if godot support this, but an equivalent to a gameobject prefabs in Unity. Example: I want to place a spike in my scene, can I create a spike tilemap to do it or do I need to place them by hand.

3. How to update and keep the player upgrade. Certainly, the biggest feature of a Metroidvania, is the ability to unlock new capacity for our character. I remember that I needed to make my own save system in Unity to keep them and knowing how to it in Godot would be great.","Character movement, I really want a great feels with it. 

Architecture of the game, how to connect everything together without creating a big ""spaguetti"" code.",Game feel;Visual effects;Code structure;Combat;Project organization;Artificial intelligence;How do you manage your animation when you use multiple spritesheet ?,"I don't have example since all video seems relevant and well writes. My main complain, if I want to be picky, the sound quality can change a lot between witch member of the channel voice the video. But it is really a small issue.",https://www.youtube.com/watch?v=V9OoaOlXc_4 what pretty clear about how the new system work. ,"A small overview of which content gonna be explained at the begin of the video could be great. 
E.g. 
tilemap
 - What new between the old and new system
- How to use bitmask
etc..
It can be helpful for people that get the video only for a specific part.",Yes,Just keep the good work !
hobbyist,small programs,personal projects,efficient ways of doing things,ideas,Level design;Code structure,,,"I think structuring them into an overall project is really helpful, especially when first starting out.",Yes,Are you likely to expand on the C# video you put up?
hobbyist,professional,finished game,professional tips and patterns,History / Gameplay,Visual effects;Code structure;Project organization;Maths for game programming,,,,Maybe,
hobbyist,professional,personal projects,"Best practices, how to accomplish tasks in Godot, what making a game looks like from beginning to end in a natural way. At what points does one decide to refactor their game code? What are good abstractions to help scale games from small project to a bigger one?",Prototyping - spending enough time on an idea to know whether it is worth pursuing,Visual effects;Level design;Code structure;Project organization;Artificial intelligence;Maths for game programming,,,,Yes,You guys rock. Keep up the good work!
hobbyist,professional,personal projects,Learn recommended usage of Godot.,Making something that is actually fun.,Game feel;Level design;Project organization;Team work,,,Provide web pages that correspond to content in video.,Maybe,
hobbyist,small programs,foundations,"How to organize a game project, how to take advantage of the scene and node system, how to write good game code.","Figuring out where to start a game. Specifically in the case of Godot Engine, which nodes are the right ones to use for a given situation.",Level design;Code structure;Project organization;Maths for game programming,I haven't watched many of them but I liked all of the ones I've seen and learned from every one.,I have really enjoyed watching the new features in Godot 3.1. They are very clear and they have helped me to understand the new features in this version.,"As I mentioned, I haven't watched very many videos so maybe you already do this but I like learning what not to do in addition to good practices. In other words, examples of common mistakes, how to avoid them, and how to debug issues that arise. I like it when a mistake is made, intentionally or not, and I am shown how to find and fix it.",Yes,I'm really looking forward to this course. In preparation I am how to view more of the free tutorials you have made before this course is released.
hobbyist,professional,personal projects,,,Game feel;Level design;Project organization;Artificial intelligence,,,Written versions of the tutorials,Yes,Thank you for your hard work!
hobbyist,professional,never used,A good plan to make the code without having to refactor as the size increase.  Hope to not find myself in a mess of a project because I did'nt know how to organize it at the start.,Having the time to do it.,Code structure;Project organization,,,,No,
hobbyist,professional,never used,"Godot, as well as best practice and design fundamentals",Prioritising the learning over my other goals!,Game feel;Level design;Code structure;Audio;Project organization;Maths for game programming,,,,Yes,
professional,professional,personal projects,,,Game feel;Level design;Project organization;Custom resources and editor plugins for dealing with them ,,,,No,
hobbyist,professional,never used,"A bootstrap from ""I don't know this tool / ecosystem / UI and I don't know where to begin"" to ""I'm comfortable starting a little professional project""",,,I haven't looked at GDquest.,,,,
professional,professional,finished game,"Effective use of parallax for pseudo depth, a la Steamworld Dig 2. Ideally, this would cover procedurally generated levels, some of which are infinite (imagine a 2d endless runner platformer or something similar). ",Management of standard and hi-dpi assets when moving back and forth between a standard and hi-dpi monitor. I also think management of a central message bus object for routing signals would better organize my workflow. I would love to be able to ship with an embedded SQLite database. Integration of Firebase/AdMob SDKs for cross-platform mobile games. Workflow for development of a game with both desktop and mobile versions. Where/how best to contain code specific to a certain platform. ,Platforming;Code structure;Project organization;Procedural level generation,"I enjoy them all, but sometime you talk/move too fast. It’s ok to slow down and have some pauses, review sections, etc. ",I enjoyed the tutorial about UI containers because it looked specifically at a useful feature and felt like an extension of the Godot docs. ,Host a Discourse forum where viewers can gather to discuss the videos and related work. The Godot community is very fragmented across many comms tools. ,No,Thank you for your work for the community!
hobbyist,small programs,personal projects,"Hopefully, ways to use composition to create better ai with less repeating code.","repeating code, especially in state machines, using simple composition to create complex ai.",Code structure;Combat;Artificial intelligence;Maths for game programming,"""Tips to navigate web pages efficiently with the keyboard"" I don't want to memorize shortcuts to do simple things. It just adds complexity most of the time.","""Model in Godot 3.1 with CSG: Constructive Solid Geometry"" Making a quick 3d mockup without having to worry about 3d modeling is great. I hope the 3d course will limit the use of outside models in favor of using godot's tools.",stronger focus on ai and 3d,No,More Ai and 3d
professional,professional,finished game,"Some random interesting tricks, even if small","Finding professionals, especially for graphical art","Code structure;Artificial intelligence;alternative development methods such as C++, and Gdscript optimization",,"The tileset one, mainly because I was unable to understand that UI on intuition alone, and not even with the documentation of that time",,Maybe,Keep up the good work
student,small programs,foundations,,,Visual effects;Audio;Combat;Project organization;Team work;Artificial intelligence,,,,,
hobbyist,professional,foundations,"To be able to finish complete 2D game project using common Godot development practices for the design of all scenes hierarchy. In addition, to minimize having to look up on how to implement basic functions in Godot for a standard 2D game such as camera movement, 2d simple effects.
 ","My main struggle is to connect several parts of the game together such as main menu, pause menu, high scores leaderboard without having bugs.",Visual effects;Level design;Code structure,,,"I like to do complete small game projects for different type of games, which covers the most basic functionality in Godot. I think it will be good value for learners.",Maybe,"Have you considered doing written tutorials? I like  written more, but video is fine :)
Thank you
"
hobbyist,professional,personal projects,"I'm mainly hoping to learn best practices when it comes to godot. Structuring, code re-use and just generally making refactoring easier. Ideally I would also really like to see a complete game, no matter how simple, that covers everything needed (layout, loading levels, pausing, save game, maybe even multi-player) beyond covering what nodes are available and how they work. Getting a real sense of how the various godot features come together to make a game, rather than looking at isolated parts, which makes it feel more abstract.","Besides finding the motivation to actually finish a project, the two main things I struggle with are dealing with multi-resolution and the GUI. I find the UI nodes in godot very finicky and I have a lot of trouble creating the most basic interfaces. And for mult-resolution, I always struggle with what resolution to design assets, how to get them to fit in a safe area, maintain ratio and still look good, especially font. Oh, and state management can be a pain.",Game feel;Platforming;Level design;Code structure;Project organization;Artificial intelligence,"I haven't watched all of the available GDquest videos, but from what I've seen I can't think of any I didn't like. In general the issues I have with tutorial videos are 1) low resolution where text is hard to read 2) jumping around too quickly, making it difficult to follow along 3) skipping important steps that are needed to get from point A to point C, making assumptions that viewers will already know how/where to do that.","From the ones I can remember offhand, I enjoyed them all equally. I appreciate it when a video is focused on one particular topic, making it easy to digest and go back to.",Maybe working off of a single game for an entire series. Revisiting earlier projects to add more advanced features rather than starting from scratch.,No,Thanks for everything you do for the community. It's very appreciated.
hobbyist,foundations,I learned some foundations,,,Game feel;Visual effects;Platforming;Level design;Code structure;Combat;Project organization;Maths for game programming,,,,Yes,
hobbyist,professional,never used,How to make a game.,Basically all of it. ,Game feel;Visual effects;Platforming;Level design;Audio;Combat;Project organization;Maths for game programming,,,,Yes,
hobbyist,completed games,foundations,Solid foundation on creating a complete game with knowledge to extend it.,AI and path finding.,Code structure;Combat;Artificial intelligence,n/a,n/a,n/a,Yes,
hobbyist,foundations,I learned some foundations,"Strong fundamentals on creating a platformer (collisions, smooth and responsive controls, enemy AI, collectibles/items the player can collect and use, hopefully shader usage) ","State machines, implementing intermediate/complex mechanics (attacking, shader usage, etc) and learning/implementing intermediate and higher programming concepts.",Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming,"The water shader tutorial - not that I didn't like it, but what I would really like would be a shader tutorial that can show me how to manipulate or change colors of a sprite dynamically (think Mario in classic Super Mario Bros when he picks up an invincibility star or Mega Man when he switches weapons.)","I really like the RPG series - very informative and in-depth, very helpful as I want to develop an RPG in the future! ","I am very happy with the tutorial quality as it is. If anything, please continue to explain and break down the concepts and projects explained as simply as possible.",Yes,"I am very happy that I stumbled upon you and Godot. Thank you for your work and dedication! If possible, please do something in the future to cover using shaders to alter the color of sprites dynamically - similar to classic arcade games and Nintendo games. This is one of the things I want to implement in my games. Thanks again!"
hobbyist,small programs,never used,"I would like to learn the basics of Godot, especially how to structure a game and layout in Godot.",Follow-through.,Game feel;Project organization,,,,Yes,
professional,foundations,I learned some foundations,"I would like to learn different ways to create different game systems like skill trees, experience, shops/inventory, dialogue, saving player data, loading and how they work in conjunction. ","I am comfortable reading most code and following your tutorials, what I struggle with is following a design target I have set and planned out for myself that differs greatly from your tutorials that also have all the features talking to one another nicely and in an organized way.. ",Game feel;Code structure;Combat;Artificial intelligence;Maths for game programming;Multiplayer/network,N/A,My favourite tutorial must be the the videos you made for the pushdown automata FSM.  Reason why I liked it was because it helped me understand powerful concepts like defensive programming and working in a very clean and organized way.,"showing how the things we are learning tie in to an actual game. How would it tie in different for different types of games? (Small games, medium, large, different genres) ",Yes,
hobbyist,small programs,personal projects,To be able to complete at least a good demo using the right tools and best practices.,"Time management, project organization and scope. Basically lack of knowledge of a game development cycle.",Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming,"https://www.youtube.com/watch?v=USIbT81VFVg  
I don't dislike it but I don't like it either, from all the tutorials I've seen I think this is the one I like less. I think is too long and little practical. When I learn something new I like to see examples in action instead of the instructor explaining deeply what does the code do.","https://www.youtube.com/watch?v=AobjNjzZhmo 
Short and practical. I think it was a good start to let me explore the rest by my own.

https://www.youtube.com/watch?v=FD5999mgbSo
All the 4 videos in the 3d first person series. It was a very practical tutorial and I learned a lot by doing it. I liked it too because I could modify and add more stuffs to the final game.","I think making tutorials with real examples (which I think most of them are), and if is explaining tools or a long script (something more ""theoretical""), to make them short to use them as references.",Yes,It would be a great idea to put assignments and create a channel in the private discord server so we students could share our work and provide feedback to each other. Maybe letting a game sort of incomplete after each chapter so we as students figure out how to complete the rest and the instructor share's his/her solution later on(?).
hobbyist,professional,foundations,,,Game feel;Visual effects;Level design;Maths for game programming,,,,Maybe,
hobbyist,I have no experience,never used,Make a couple levels,Never tried,Platforming;Level design;Combat;Team work,Haven't been on the channel,Haven't been on the channel,,Yes,
hobbyist,professional,foundations,Have solid understanding of the foundation of Godot's workings. Have enough experience to help myself further in discovering all features of Godot.,My unfamiliarity with game design patterns,Game feel;Visual effects;Code structure;Project organization;Artificial intelligence;Maths for game programming,N/A,N/A,N/A,Yes,You're doing a great job! Thanks for asking for feedback!
student,I have no experience,foundations,"Step by step walk through, but with explanations WHY, and also where else things can apply (what other uses each piece of code or API call has, for example)",Understanding the API and programming; applying the stuff learned in the tutorials to new games,Platforming;Code structure;Project organization;Artificial intelligence;Maths for game programming,,,,Yes,Assignments! 
hobbyist,foundations,personal projects,"I expect to learn more about godot and the algorithms used in game creation. I think, but maybe I'm wrong, that some things I learn in this course can be reuse in another game engine, like Unity or UE.","The algorithms, the patterns used in game creation.",Visual effects;Platforming;Level design;Code structure;Audio;Combat;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,personal projects,Godot workflows for 2D and 3D projects,Updates /changes to gd script from v2.,Game feel;Platforming;Code structure;Project organization;Maths for game programming;Workflow from ideation through planning and design through production and delivery of a project,,,Subtitles and challenges with worked answers available,Yes,Keep up the great work guys! Really looking forward to the course.
hobbyist,professional,never used,,,Game feel;Code structure;Project organization;Maths for game programming,,,,Yes,
hobbyist,small programs,personal projects,Some common techniques and best practices for developing a videogame.,Math. I have been learning it for a while but still have big gaps in knowledge.,Game feel;Level design;Code structure;Project organization;Maths for game programming;Introduction to 3D.,I haven't watched all however I don't think that any of those I have watched are bad. I am inexperienced so almost everything is a new valuable information to me.,I like your channel because you make nice visual examples of the code you're demonstrating. Like in the old platformer tutorial where you show how the collisions work. It helps a lot and I would like to see more of these.,"Sometimes I was more interested in the topic but the video didn't go in depth enough. Would be nice to have optional in depth sections or links to some external sites (if you're not doing it already, honesty I don't remember right now).",Yes,
hobbyist,small programs,foundations,,Finishing/Making the complete project,Platforming;Level design;Code structure,,,,Yes,
hobbyist,small programs,personal projects,Some methods to improve my game development skills,Not enough guides(example: login to web hosting or background loading assets).,Visual effects;Level design;Artificial intelligence;Maths for game programming,I don't like the tutorials that require to start from an existing project.,I like the tutorials that explain nodes step by step without templates.,By including pdf versions,No,I would love if you had videos that create full games (example: a real time strategy and an adventure game).
hobbyist,professional,foundations,,,Game feel;Code structure,,,,Yes,
hobbyist,small programs,foundations,How to create nice 3D games,Animation character and collision when character hits,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming,"Hard to say, i like many videos...","Hard to say, i like many videos...","I think you can add sections for 3d animation, and character control.",Yes,I hope for you guys!
professional,professional,never used,Professional game development techniques.,"Visual effects, AI",Game feel;Visual effects;Platforming;Level design;Code structure;Combat;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,professional,foundations,The foundations for making complete 2/3d games in Godot,"Completing a project. I think this is because I get so far and then hit roadblocks, usually because I can't find a solution technically. ",Game feel;Visual effects;Code structure;Project organization;Animation,,,,Yes,Looking forward to the courses 😁
hobbyist,small programs,finished game,How to manage a full project. Good programming habits and learn new thungs especially on the 3D side.,Keep a clean code well organized and reusable.,Game feel;Visual effects;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming;3d,Sometimes you use some complex/advanced pattern or logic that I don't get. The problem is that I'm a self teacher programmer and I don't have some basics in mind...,,,Yes,I really want to learn 3D stuff because it's undocumented by the Godot collunity and I hope you could do something ! Tanks a lot for all your tutorials ;)
hobbyist,I have no experience,never used,I expect to be able to create games,no knowledge,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Maths for game programming,,,,Yes,
hobbyist,small programs,foundations,Solid techniques ,Sound and music,Platforming;Level design;Project organization;Artificial intelligence;Maths for game programming,I don’t like those with a not fluid spoken english- as a non speaking user and not so good english speaker it‘s harder to follow. ,Mostly the Videos from Nathan,-,Maybe,What is with assignements meant? I don’t understand the question above 
hobbyist,small programs,foundations,,,Platforming;Level design;Combat;Artificial intelligence,,,,Yes,
hobbyist,completed games,foundations,"I want to learn how to deal with collisions in Godot, how to handle different device resolutions and how to create views. I want to know how to create HUDs, menus, dialogs containing entry fields, sliders, radio groups and checkboxes (the typical Options or settings dialog).
I want to learn good patterns for combining Nodes to Scenes to create the required complex game elements. For the platform game itself I want to learn how to create moving platforms, jumpthrough/fallthrough platforms. I'm interested in parallax scrolling and some light system.
Also important is how to create some ""sexy"" looking movement system where jumping is fast and not in a slow boring arc movement (Read Super Meat Boy vs. old Mario games).
State machines are also an issue for the player if he is going to attack monsters.
And then different weapons, like sword, whip, bow and arrows. How to handle their movement (swinging sword or long whip, shooting arrows) and good looking hits.
Another area is dealing with different input devices (touch screen, keyboard and mouse, controller).
Finally I would love to learn all requirements to deploy the game to Windows, Android and Web.
Things like online high scores would be the cherry on the ice ;-)","Code wise: Only to learn the API and scripting language of the new system (like Godot) and finding ""best practices"" how to do something in the specific system.
I do struggle with graphics. Here I mostly rely on others. I buy graphics or team up with an artist.
Also I have little knowledge about particle systems and shaders.",Game feel;Visual effects;Platforming;Code structure;Project organization;Artificial intelligence,,,"Maybe add notes to the videos to describe the important highlights/parts of the video. Or add links to the Godot documentation.
For example: if you use yield() in a script a link to the Godot documentation would make sense as yield() is a pretty complex behavior for your code.
This way I wouldn't necessarily have to watch the video again if I'm looking for some advice how to do something with Godot.",No,"I really like your YouTube tutorial channel. You deal with a lot of good game related issues. Sometimes I would love to have those as written blog entries or (gasp) a book. But maybe that's just me preferring to read than to listen/watch some video. But maybe that is an idea for you to present your knowledge in another way ?

Cheers from Germany and thanks for all your great work to help game developers learn Godot,
Thomas"
hobbyist,small programs,personal projects,New techniques,the Finite-state machine,Game feel;Code structure;Project organization;Team work,,,,Yes,
student,small programs,personal projects,,,Game feel;Visual effects;Code structure;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,professional,foundations,Gain some fluency with 2D and 3D,Interesting game design,Game feel;Code structure;Project organization,I like them all,"I like all the tutorials with practical examples, even if they are very small. ","I would be great if there was a webpage with categorized links to all the individual tutorials, so I could easly find what I need without the need to browse through the youtube channel.",Yes,"What your are doing is really great, so please keep it up :)"
hobbyist,professional,foundations,From basics to full project,Project from start to finish,Game feel;Visual effects;Code structure;Project organization,Any where the teacher speaks way too fast.,Any where we have a neat structure and that is easily followed with a decent speech speed,Generic parts that can be put to use in a lot of situations,Yes,
hobbyist,I have no experience,foundations,,,Game feel;Platforming;Combat,,,,Maybe,
professional,professional,foundations,Learn Godot,,Game feel;Code structure;Project organization;Artificial intelligence,,,,Yes,
hobbyist,professional,finished game,"best practices, practical solutions to common problems, juicing techniques, complex ui practices","knowing when to not reinvent the wheel, when something is available and would suit my case",Game feel;Visual effects;Code structure;Artificial intelligence;Maths for game programming,,,have the tutorials in text form as well,Maybe,
hobbyist,professional,personal projects,Best practices and useful techniques that I can apply to my hobby projects. ,"Game art, best practices and not reinventing the wheel. ",Visual effects;Level design;Code structure;Project organization;Maths for game programming,,"I like all the tilemap tutorials, because they help me create decent art for my prototypes without too much effort, and I'm not a good artist. ",,Yes,
hobbyist,professional,personal projects,,,Game feel;Visual effects;Platforming;Level design;Code structure;Project organization;Maths for game programming,,,,Maybe,
hobbyist,professional,personal projects,"Getting the basics of an adventure game, a foundation for my own projects.","The big picture, how to best organize and architect things.",Code structure;Audio;Project organization;Artificial intelligence;Maths for game programming,"I remember I found the beginning of MAKE PROFESSIONAL 2D GAMES WITH GODOT a bit confusing, but I was a total beginner at the time. I have yet to watch the new version of chapter 1.",I like when a tutorial explains the big picture before it dives into the details. An example would be Code a Simple Puzzle Game in Godot: Box and Switch tutorial,,Yes,Thank you!
hobbyist,professional,foundations,Game design fundamentals and Godot best practices,,Game feel;Level design;Code structure;Project organization;Maths for game programming,,Personally I think that the quality of GDQuest tutorials is very-very good and constantly improving.,,Yes,
hobbyist,small programs,foundations,"Basic competency with Godot, signals hopefully especially",2D Sonic-style Physics,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Project organization;Team work;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,personal projects,How to organize projects in godot,My perfectionism,Visual effects;Combat;Project organization,.,.,"More advanced tutorials, about new topics",Maybe,
hobbyist,foundations,personal projects,Advanced 2d Programming ,Structuring the Game and Programming itself,Game feel;Visual effects;Code structure;Project organization;Maths for game programming,,,,Yes,
hobbyist,small programs,foundations,"How to plan for an extensible project from the start, and code in a robust way","I tend to be bogged down by poorly architectured basis, and I see no way to extend it to add a new idea on top.",Game feel;Level design;Code structure;Project organization,"Nothing that I did not like at all, you produce overall good quality content. Some are a bit lower, for instance the Model with CSG in Godot 3.1 - though interesting, it felt not precise enough on how to use it effectively.","I loved the Visual Shader Editor (Dissolve Shader), mostly because it's all new to me, and the result is very slick.",Highlight systematically the proper (or a proper) way to use the technique that will also scale in the future - not just for a one-off experiment,Yes,"I'm looking forward to the 3d course ;) But I expect to learn a lot also from the 2d one, based on your content so far: so Keep up the good work!"
hobbyist,small programs,never used,"To know at best this new (for me) game development environment.
Moreover, I'd like to share this experience with my children","I'm a programmer (C++, Python) and I'd like to use the right function instead of write it from scratch because I unknown of its existence.",Visual effects;Level design;Audio;Project organization;Team work,,,CC (subtitle),Maybe,
student,completed games,finished game,Platform/Adventure specific code and tricks for better performance and easier content creation,I specifically have struggled a lot with loading resources such as sprites outside the pck file once the game is exported (useful to enable modding for example).,Game feel;Visual effects;Level design;Code structure;Combat;Project organization;Artificial intelligence;Modding,,"The whole OpenRPG series, because you can see a whole project form start to finish and learn specific tricks.","Series such as OpenRPG are extremely useful, doing similar series for different types of games could be extremely useful.",Maybe,
hobbyist,small programs,personal projects,"Best practices, how to architect game code",Finishing,Game feel;Level design;Code structure;Audio,,"TBF I haven’t watched a lot of your stuff, so it’s hard to pick the best. I like that you have this huge library where I can get like a primer for specific system when I need it. Maybe watch some of this youtubers videos, because I really like his tutorial style: https://www.youtube.com/user/Miziziziz",,Maybe,Thank you for the work your doing for the Godot community :)
student,small programs,personal projects,"I expect to further solidify my mental model of the interplay between the different parts of the engine, such as nodetrees, rendering, input handling etc.",how to structure my code and classes/nodes that it makes sense and doesn't hinder me in the long run,Game feel;Visual effects;Code structure;Combat;Project organization;Artificial intelligence,"up until now, each one has been good <3","i especially liked the videos where nathan gave a bit of personality to the channel, that helps me socialize and familiarize with the channel :)","Sometimes there are moments where i think ""okay i didnt get that part"" or ""why is that the way it is"", which is unfortunate because there is no way for you to know prior to that, which moment that will be. so that's highly situational and also an individual problem. my best advice would probably be that you try to look through the script for parts where one could think ""okay that could need some background explanation why that is the way it is"" and then refer to a different video or sth. hope this helps ",Yes,
hobbyist,professional,never used,To understand how to create 2D games. Detail Godot understanding.,"My biggest problem is how to structure the game, how to define different parts od the game.",Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,foundations,"How to create all of the common elements of a typical 2D Platformer. Since this is quite a big genre, I would love to see you cover all different cases and ways to implement certain mechanics, rather than choosing one way and making a ""complete"" game. For example, should enemies damage the player on touch (like Mario) or only when they perform an attack? (like Dead Cells. Not sure if you've heard of this game before) I would like to see you implement both versions (and any other common versions that I can't even think of!). The reason for this is because I think the course will be more useful for a larger number of people and I think showing the starting point for lots of different things is more helpful than going into very very advanced stuff on just one thing. Because the hard part is usually knowing where to start. Once you know where to start, It's a lot easier to do your own research on top of that (and also it's easier to know what to search in google to find the right answers, or when asking for help it's easier to ask a more specific question). On top of that, I just really like seeing lots and lots of different ways to implement the same thing and how to do it. It's not just about the amount of knowledge that I get from it. It also gives me lots of different ways of thinking about other problems in other areas of the game","0) In general, I have a good basic understanding of coding, but I don't know many design patterns. I really liked how you taught the state machine pattern, which was like a game changer for me (literally!). 

1) Deciding how to structure my code. For example, if my player can attack, should attack be a state inside the state machine? But what if he can walk (and jump) while attacking? 

2) Wrapping my head around different ways to make code re-usable. For example, I'm creating bullet projectiles, but I am planning to create a LOT of different types of bullets, bullet patterns, etc. So my first solution to this was to create a bullet.tscn with a bunch of nodes and a bullet.gd script. Then I created a bullet_info.gd script with the class_name Bullet_info that was simply a container for a bunch of information like movespeed, damage, whether it explodes on collision, sprite, etc. And then for each new bullet I would just create a new resource file (of the Bullet_info type) and change the parameter, pass that resource into the bullet.gd file which would implement the bullet based on those parameters. But the problem quickly became more and more tricky. Some bullets move in a wave motion. Some have angular velocity. Some have both. Some would have phases where they have such and such properties at first, but then when they collide they turn into a completely different bullet. After a while, I found that the Bullet_info variable list got veeeery long and most bullets would only use half of the variables. For example, a simple, straight-moving bullet would simply move straight, but it would unnecessarily be storing values like: angular_velocity = 0, wave_motion = false, etc etc. So the other Idea I had was to simply use the bullet.tscn and create copies of it and edit the whole scene for each new bullet type. But I haven't gone into that yet and I'm not sure how it will turn out. 

3) instancing. I can't wrap my head around instancing. When we instance something we need to make it a child of something. But it doesn't seem natural to create a bullet from the player and make the bullet a child of the level scene. But if we make it a child of the player, then the position of the bullet becomes relative to the player (which is what happened when i tried to do it. Also, I can't wrap my head around the difference between ""bullet = new ______"" vs ""bullet = ______.instance()""

4. I have trouble coming up with a scope for my game. I'm currently working on my first game ever and ideally I want to make a very small game. As long as it is a fully complete (albeit short) and playable game. However I keep adding more features and i procrastinate on working on some features because I try to make the code as re-usable and duplicatable as possible, but that just makes every little tiny feature become very complicated and my progress slows down a lot. Not sure if this is within the scope of this course, but just thought I'd mention it.

5. Anything to make the game more visually awesome without the need to get better art. Art is one thing, but I'm more comfortable with code. I love particle effects because it allows me to make certain things look so much better without getting that much better at art or drawing. I would love to learn more about similar things. For example, shaders.",Game feel;Visual effects;Level design;Code structure;Combat;Project organization,Can't find such an example,"https://www.youtube.com/watch?v=7PhGpMZfEHU
This one was really cool because it taught not just how to implement a specific thing (adding stats to characters) but a general method of doing things in a re-usable way (using resources and loading them), similar to learning a new design pattern. I think learning new design patterns or workflows or other high level things like that are a lot more rewarding and interesting to learn because you can use it eveywhere in your code and it helps beginners like me become better coders, not just learn how to implement specific things in specific scenarios.",,Maybe,"Regarding the previous question about assignments: I would use assignments if I'm completely new and don't have my own project to work on. But currently I'm working on my first game, so I would use what I learn directly in my own project instead.

Also I recently finished playing Hollow Knight and it has become my absolute most favourite game of all time. I would love to see anything and everything that could help me make a game like hollow knight :) Also you should play it if you haven't already played it."
student,professional,foundations,How to use the functionality godot offer,"Graphics/Animation (Shader, illumination, animation of object) ",Visual effects;Code structure;Maths for game programming,"I don't really have a tutorial that I don't like, I found some tutorials parts boring since it go slowly to teach basic to everyone, but it is because I already have a developer background. (don't change that, I think it is important to stay everyone oriented) ","It's a bit old, but the custom camera series, I like the fact that the code was improved (refactoring) and the feature was implemented by step while showing another possibility.
I kinda permit to show more knowledge, I like the tutorials that learn me something but also the thing around or other possibility offered. ","From my point, I don't really need anything more, I succeed at learning with what you already offer",Yes,You all are doing a great job! 
hobbyist,professional,personal projects,"Things that go above the basic tutorials you can find on Youtube.
Skip the very basics like setting up a character controller.
What is special about Godot when it comes to 2D.
How can you easily achieve special affects.","Planning and building a more complex level.
The planning phase should lead me to program it in a straight forward
way using godot.",Game feel;Platforming;Level design;Project organization,"It's hard to find anything that I absolutely don't like.
Some things are just irrelevant for me like details about Unix-Shells or Editors I do not use.
On the other hand, it's just that, what I like about the channel. It covers topics which are relevant for a lot of people and topics which are only relevant for a very small group. This makes it different an more likable compared to much bigger channels which try to attract lots of viewers in very short time but only produce for the mass of viewers.","""New Tileset Editor in Godot 3.1: Preview and Tutorial"" - It teaches a powerful new feature of Godot in very short time. This video was my initial reason to switch from Unity to Godot, as it demonstrated one of the key benefits of Godot: How to do the same 2D things with Godot in a better way and in less time than in Unity.",,Yes,
hobbyist,professional,personal projects,How to effectively use some of the nodes. Find the correct node for the correct use case.,Not programm something that some specific node can already do (probably better than what I can code),Visual effects;Combat;Maths for game programming,"None. All are very well made, but some do not apply to me.",The ones that explain the usage of the nodes in depth. ,"Know the nodes. The documentation gets better and better, but soemtimes it is still not easy to find the best node for a specific purpose. So explaining the nodes and what can be done with them would be really appreciated",Yes,Kepp up the good work. And thanks for all the awesome videos so far.
hobbyist,professional,personal projects,The process of creating professional videogames from A to Z so I can apply that myself,Asset workflow and game design and mechanics,Game feel;Visual effects;Audio;Project organization;Team work;Artificial intelligence;Maths for game programming;Asset workflow and management,Nope.All of them are awesome.,"Almost all are high level, but the one I really liked was the shaders one. I already knew how to ose them, but you made it easy for newcomers to the matter","I'm not sure. You are very good at that. I use the videos as reference. So when I find an specific matter I need to do, and you have a video of that, I watch it. I do not wollow the course in a lineal way.",No,Good job. Keep that way :D
hobbyist,foundations,I learned some foundations,To better undersd Godot  and  hinds for future self programmed Programms,Most time to set a   good idea in code that works,Game feel;Level design;Code structure;Combat;Project organization;Artificial intelligence;Maths for game programming,i don't like the tutorials where many  thinks inside which not teached  in the tutorial bevor . Because so the tutorials  you have code which are need for this tutorial and you maybe never heard from bevor as example you  learn how to code  the input for movement for the char and this you put in a Code Block where allready is the code for shooting or restrictions for the movement what you not learned in ths tutorial. (this is an example),The most tutroials because you learn much ,As i write in the i don't like said it would be very good when in a tutoriell is only the code  inside wihich you learn in this tutorial and not code or  nodes  what not is explaint   in this tutorial which come from nothing ( sorry for my bad english is long ago that i write in English :-),Maybe,Go on and make the good work further 
hobbyist,completed games,finished game,"project organization, using godot specific implementations",see below,Visual effects;Level design;Code structure;Project organization;Artificial intelligence,,,give the user some exapmle tasks to work on for further improvement of the specific skills of a tutorial,Maybe,
hobbyist,small programs,personal projects,to be able to create my own project from start to finish based upon excruciatingly detailed explanations of each design decision or any complex technique used.,Design decisions and how best to combine the nodes provided by Godot.,"Code structure;Project organization;Team work;Everything else is also important but I think those I checked are the most important ones to me. anything that I can learn from this course, I'd gladly take it.",I have no specific example in memory but I didn't liked videos about concepts too advanced that I could not grasp.,No specific example but all that I can understand and learn a new technique is invaluable.,"Well, for complicated techniques that are too hard for my understanding, maybe put some links to previous videos would help (since I didn't saw everyone you created). Also, it would be great to have a small series about a simple yet complete project to see different techniques. I still haven't grasped how to design different screens like title, main, game, end screens for example. The know your nodes from kidscan code would absolutely be awesome if you could demystify the nodes for use. I found the documentation very lacking in this regard since their is a very good description of the API but not quite so on the properties (inside the inspector that is) of the different nodes. I'd love to see in the documentation something like the API section but for the properties of each node. since, it doesn't existe yet, some videos about this topic would be great for me. To be honest, I'm still struggling to understand everything Godot has to offer since I'm no programming expert and neither very used to full game engines like Godot. I'm learning better from your videos (that i take like a tip of the day formula) and kidscancode channel, solo codenet (a french channel) and some others than from the official documentation. I don't know why I'm so struggling with it but kidscancode 101 series for example, helped me make things click in my brain for basic concepts.",Yes,"I know you cannot cover everything there is to say about Godot and your time is limited. Also there is the matter of beginner content versus advanced users content. I suppose both would ask for different levels of content. The only thing I can say is that your last videos seems better than the previous one (though they were also very good) so I assume you're on the right track to provide perfect content for all to enjoy.
Finally, if you are in touch with the deav team, I'd love to know if Godot could be ported on the Raspberry Pi with the support of OpenGL ES 2.0 back ? (this is a very personal question that one !)^^"
hobbyist,small programs,never used,Bases to make a complete game,,Level design;Code structure;Project organization,,,,Yes,
hobbyist,professional,foundations,I am waiting for this course to allow me to deepen my knowledge of the Godot engine and allow me to create my first game,The different videos game design pattern,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,foundations,How to get a working project with as little to no programming knowledge. I despise having to learn “another” language.,"Multitude of programming languages. It needs to get to the point of drag and drop similar to RPG Creator. Also, exporting to iOS is never shown to work step by step.",Easy game development ,No,I liked how at one point you showed the non coding method of game development but you never expanded on it. Point and click is very important for my sanity.,Show how to get an app from Godot on Windows onto your iPhone or iPad. Step by step including footage of it running on your iPhone. Android is a very open platform and it does not count.,Maybe,"Please make a series on how to use Godot with zero code or just scripts that you can inject to get certain functionality similar to how RPG Maker does it. I tried going through the official Godot beginner tutorial and ended up neck deep in learning a new language that in the end had a tutorial that was out of sync with the language so I got stuck and couldn’t go any further.

Take a look at your video series vs the official written tutorial about that dodge game. They’re different to the point where it makes it difficult to have confidence in the wiki information and a Godot entirely."
student,foundations,I learned some foundations,How to do my own metroidvania game.,"Not having tried to create any game, I will answer that there are some free tutorials about the very basics of platformers in Godot so the most difficult documentation to find are the ""not so basic"" subjects, that I expect to learn in this course.","Code structure;Combat;Project organization;Artificial intelligence;I would love to learn about combat mechanics, like block, combo, grab the enemy, etc. Also it's hard to find tutorials about changing clothes and weapons of the player sprite. ",Sorry no time for that,No time for that,"You go straight to the point and you try to use as less words as possible trying to be very clear like the documentation. I would love a little bit more about your opinion and other not so crucial information. Example:
You would say: This is a cat, and this is a dog. Both are pets in human society.
I would prefer: This is a cat, and this is a dog. Both are pets in human society. I like dogs more because they are more obedient but some people like cats because they are more independent. Be careful to not mistake wolf for dogs because they are very similar and wolves are dangerous.",Maybe,I cannot wait! Thank you for all your work!
hobbyist,small programs,never used,An isolated series of basic concepts strung together in a reasonable fashion.,Making the jump from basic concepts to game prototyping and actual production.,Game feel;Platforming;Level design;Combat;Project organization;Artificial intelligence,,,,,
hobbyist,professional,personal projects,,,Code structure;Project organization;Team work,,,,Yes,
hobbyist,foundations,never used,Creating mobile games using the godot engine,Have an idea of gameplay but don't know what to do to implement those features.,Game feel;Visual effects;Artificial intelligence,,,Common mistakes videos,Yes,Keep up the good work.
hobbyist,foundations,personal projects,Game architecture and overall project organization. Any in-depth knowledge of how Godot engine functions under the hood. Also hoping for any procedural generation stuff.,Game architecture. How to make game easily extendable.,Visual effects;Code structure;Audio;Project organization;Artificial intelligence;Maths for game programming;Game programming best practices. Also some info on using version control systems with Godot.,"Sorry, I can't. All tutorials seem very adequate.",,Subtitles or voice transcripts can greatly improve understanding for non-English viewers (myself included).,Yes,
hobbyist,professional,personal projects,"Better techniques for game programming, both in general and in Godot",Scoping correctly and finishing projects. Keeping code organized as the game grows.,Level design;Code structure;Project organization,,"https://www.youtube.com/watch?v=oNNaMQtqHMU -- Great explanation of a useful feature that I was unaware of.
https://www.youtube.com/watch?v=l2wF2gj_hlA -- Complete start to finish example of coding a simple but expandable game.",,Yes,
hobbyist,foundations,I learned some foundations,"the basic know-how to desing & create (appealing/fun) games, with a focus on 2D plattformers/adventure games (but also applicable to other genres & enabling you to find solutions/further educate yourself)","I have no experience, so: 1. starting out, 2. actually making the game in Godot (the ""technical"" stuff: possibilities/limitations of the engine, writing the code, peicing the parts [art, sound, game system/mechanics etc.] together into a working game)",Game feel;Visual effects;Level design;Code structure;Audio;Project organization;Team work;Artificial intelligence,,,,Maybe,
hobbyist,small programs,personal projects,Game design concepts that build on your previous ARPG course,"Coming up with ideas, staying motivated.",Game feel;Visual effects;Code structure;Artificial intelligence,,,,Yes,I think you guys are doing a really great job! I like how your tutorials are structured in general and I'd love to see more of the same.
hobbyist,professional,foundations,Stretch goal: how to implement cooperative multiplatform and networked game :-),"Networking, synchronization of game state",Visual effects;Code structure;Audio;Project organization;Maths for game programming,"There are tutorials about topics I am not interested, for example: emacs or Krita, but might be interesting for others, I guess. Intro to GDScript was too big and too fast.","Besides the Godot tutorials, for example 2.5D tutorial, I like your traveling videos, and material promoting Godot.","Make sure you provide examples with code, Godot projects, other material completing the videos, so the tutorials are not just talks.",Maybe,"You do really good work! The work is of high quality, I enjoy it. You also bring a lot of energy into the Godot community, make sure to  share it with the other contributors. Keep developing!"
hobbyist,small programs,never used,,,Game feel;Visual effects;Level design;Audio;Project organization;Artificial intelligence,,,,Yes,
hobbyist,professional,foundations,"General improvement in using the engine, and learning a lot of best practices for common problems. I also strongly interested in game design.","Combining the various features in the Godot engine to solve a complex issues. This is mostly because I am new to it, and need to think a lot and do a lot of research to find the correct pieces and how they should interact to achieve a good solution. Not to mention that programing in the game engine feels very different than the type of programing I do for living.",Game feel;Level design;Code structure;Project organization,,,,Maybe,
hobbyist,small programs,personal projects,"To have a better understanding of the engine, and learn about how to make games that are ""alive"" and have a personality.","Implementing my ideas about how the game should ""feel"".",Game feel;Level design;Project organization;Team work,I don't really have one.,"It's hard to choose one, I'm a hobbyst,  so I don't really have a higher education in programming or game design, so I always learn something new from the videos. There is one video though that is special for me, it's the collab with Borodante, because that's how I found this channel. It would be nice to see more of that kind of videos as well.","Well, I'm not sure about this, but one thing I think taht needs to improve is the, ""consistency"" (I'm not sure what would be a better word for it) on the channel. What I mean about this, is it's hard to look for a specific video. There is no consistence between the thumbnails, so I don't know if it's a tutorial or more like a theory, or is it about game design, etc. Last year the thumbnails started to use a color coded panel on the left side, which included the theme (network, code, design, etc), but after a few videos this ""feature"" was dropped. It would be nice to have it back across all videos.
An other thing is it would be nice to have a table of contets of the videos, because the playlist on the channel are not very organised.",Yes,I just want to say thank you for everything that the GDQuest team does for the community! :)
hobbyist,small programs,personal projects,getting better at my hobby,starting and actually finishing something decent,Game feel;Code structure;Artificial intelligence,I don't have a particular example in mind.,I liked the previous course a lot because it's a total package.  You learn to work towards a specific goal.  ,"By creating tutorials that aim at more experienced intermediate or advanced users.  For example creating a dialogue system, creating smarter enemies, making a simple multiplayer game, a simple VR game, ...",Maybe,Keep up the good work !
hobbyist,foundations,I learned some foundations,GDScript ,math,Code structure;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,foundations,general knowledge that can always be applied in develop any games,using maths related to game to solve some problems ,Visual effects;Artificial intelligence;Maths for game programming,"cannot recall any, so I will skip it. ",nil,"maybe, give some real life examples related to the tutorial",Maybe,"It is difficult to recall a tutorial either it was good or bad, maybe just provide some choices of video to pick will enable me to give better feedback. This is my first time to purchase a gdquest tutorial, so I don't really know the style but I guess it will be fine. Also, good luck!"
hobbyist,small programs,personal projects,A better grasp of game making and design using Godot,Understanding how GDscript works and making my own games without the use of tutorials.,Game feel;Visual effects;Level design;Code structure;Project organization;Artificial intelligence,,The two part Intro to GDscript. I liked that you had an intro video that went over the script and went in depth and then had a follow up that put the concepts of the first video into practice.,,Yes,
hobbyist,foundations,personal projects,,,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Maths for game programming,,,,Yes,
student,small programs,foundations,I want to learn how to really use the nodes of Godot to my advantage so that they will work together and make my games interactive and entertaining.,Game asset creation and then how to actually tie it all into a working game in an engine.,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Team work;Artificial intelligence;Maths for game programming,The 2d puzzle game video was very hard for me to follow. It was very quick and the audio was hard to follow.,The Intro to UI Themes tutorial was very helpful. It was easy to follow and explained each part of the process in detail. That makes it so much more understandable for someone who is just starting out in the game development as well as the Godot community.,Keep up the good work.,Yes,I'm very excited for this course!
hobbyist,I have no experience,never used,The basics of coding in godot and best practices. ,"Im struggling why certain code is entered the way it is. Seems like every video I watch, the tutorials code different(I know there are many ways to code). What I mean by this is not just logic but the coding itself. This would be a beginners beginners tutorial. Other tutorials expect you to know why the code looks this. I don’t mean a print screen tutorial, but why a semicolon and not a dash or where the code is reference from. Seems like I should know this but I’m very green. I liked your tutorial about GDScipt intro. Need this exact explanation in godot itself. ",Game feel;Visual effects;Code structure;Project organization;Maths for game programming;Physics. ,The Krita tutorials; but that’s only because I’m not interested in the program right now. That doesn’t mean I won’t be at some time in the future. ,Your game juice tutorials. I’m less about tutorials about a certain genre and more about how to do small things. It helps me learn when I put them together. ,Keep up the good work. I think we need people like yourself that are willing to put in the time and produce good quality tutorials. Without your tutorials there wouldn’t be half the learning content out there for myself to learn. ,Maybe,"Can you make a tutorial about a 2d vehicle side scroller with shocks and with movement over round hills. I would also  like any physics based tutorials like ropes, boxes, wheels, bridges, rockets, winds; pretty much anything physics related I’m struggling with.  More game juice would be nice. I like those. I think a game has to look and feel good for play ability. Cheers. "
hobbyist,professional,personal projects,"General gaming engine concepts (transferrable knowledge: workflow, terminology, how to think about game engines, etc.), plus Godot-specific techniques and approaches that help me (as a professional coder) learn how to lean on the engine's built-in features vs. coding them from scratch (out of ignorance). Mainly, I'd like to become comfortable using Godot as my go-to tool for developing interactive interfaces for work, and for prototyping 2D and 3D interfaces. It would also be nice to be able to quickly make some (small) games and demos for fun -- I never seem to have much time at home to play.","I don't really understand the capabilities of the various building blocks in the Godot engine, and going through the online API and documentation isn't efficient for coming up to speed. How do I: choose which components to use; how to aggregate them; when to make certain parts their own scene; how to communicate effectively between scenes; how to develop reusable parts. How do divide capability between code and component capabilities (i.e. when do I code). I'm not an artist, so how do I use existing 3D art with texture? (I've played with this for a few hours, importing modules of various types from different sources, but the textures and models are hard to manage and use.) Using these game engines isn't entirely like doing OOP -- there are a variety of additional considerations during design, and I'm struggling to understand the trade-offs.",Level design;Code structure;Project organization;Team work;Artificial intelligence,"(Don't stress over your English pronunciation -- it's fine, really.)","Not a specific one, but I like the pace of the tutorials, and the length of each session  is great.","I'd love to be able to easily download them all so I can watch them offline. (Maybe I can do this already, but I haven't looked for a good method yet.)",Yes,You've been doing a great job. Looking forward to the next set of videos. Thanks!
hobbyist,professional,foundations, The main techniques involved in a metroidvania (I love meteoidvania games by the way) ^_^,"I have programming experience in other fields (machine learning), and the most difficult part for me is how to structure the game logic (like the active and finished quests during the entire game). I use to have a central controller to manage this kind of persistence, but with Godot I have to distribute the code.",Level design;Code structure;Project organization;Artificial intelligence;Maths for game programming,No,,,Maybe,
hobbyist,professional,personal projects,"How to design multi-level and multi-scene game
How to use generative function to fill scene
Examples on making user UI (inventory/stats/etc)
How to publish finished game to HTML and/or mobile devices ",finishing it :D,Game feel;Platforming;Level design;Artificial intelligence,"can't remember any that I particularly disliked!
Except maybe that one about dialogue system that used freshier version of godot than the one I had, figuring that out was a hassle",Introduction to signals. It was very well explained and just was about what I wanted to understand,Hmmm... Maybe add a thing that shows what buttons you're pressing so I won't have to guess shortcuts (or you won't have to voice them),Yes,Please keep being awesome! Love your content :)
hobbyist,professional,foundations,Solid foundations in the godot engine. ,Creating a complete game,Visual effects;Code structure;Artificial intelligence;Maths for game programming,,,,Yes,I'd love to see a tutorial on destructible terrain :)
hobbyist,professional,personal projects,The fundamentals I nees to create a full metroidvania,ideas,Game feel;Visual effects;Platforming;Level design;Code structure;Artificial intelligence;Maths for game programming,Did not watch any,Did not watch any,Search a voice actor to syncronize your videos. ,Yes,
hobbyist,professional,never used,Godot ways of doing stuff (did some Unity course in the past),"Current ""family / game creation"" balance is geared towards family :)",Game feel;Code structure;Project organization;Maths for game programming,,,"Declare concepts to be learned in the intro (helps to determine if you are a fit target audience). Repeat things learned at the end of the video (helps verify your gained knowledge, or rinse and repeat if you missed something).",Yes,Thumbs up! you are awesome :)
hobbyist,small programs,foundations,"To learn about all the things Godot has to offer to make game development easier (specifically workflow, standard classes and how to extend them); Testing and optimizing game performance; Publishing to different platforms.",Maths; Advanced algorithms.,Code structure;Artificial intelligence;Maths for game programming,"There aren't much tutorials I don't like, but if I have to choose the Krita tutorials are the least interesting for me. I already know how to create sprites and textures and there are other resources to get information from. I'd rather have GDQuest stick to code and engines.","I really liked the video titled ""How to code RPG battles: open RPG combat system overview"", because it showed how different nodes interact with each other.","Assignments, Puzzles, Examples of experimenting with code and the different outcomes it will generate.",Yes,<3
hobbyist,professional,personal projects,I wanted a better understanding of Godot based around building game project seemed the best idea for me.,I struggle most with source code organisation and structure. I always seem to get tied in knots when it comes to writing games (possible it's more a lack of planning!!). I am a programmer by day and don't suffer from this problem when I write non-game code but writing games usually leaves my code a mess and I often abandon projects out of frustration!!,Code structure;Project organization;Artificial intelligence;Maths for game programming,Not found one I don't like yet!!,I like all of the ones I've seen so far. I love the style of the presentation and the level that they are pitched at is perfect for me.,,Yes,Just to keep up the great work :)
hobbyist,foundations,I learned some foundations,,,Visual effects;Level design;Artificial intelligence;Maths for game programming,,,,Maybe,
hobbyist,professional,personal projects,"Nothing special, maybe some advanced techniques",Missing time :-),Game feel;Visual effects;Code structure;Team work;Maths for game programming,,,,Maybe,
hobbyist,small programs,foundations,I would like to be able to make a game all by myself,"The ability to prototype quickly to understand what idea works better, and the actual creation of game mechanics",Game feel;Code structure;Project organization;Maths for game programming,I've seen a few but they were all good,"I don't remember, I watched it a long time ago",,Yes,
hobbyist,small programs,personal projects,,,Code structure;Project organization,,,,Maybe,
student,foundations,never used,Learning the complete path to create a game,Managing the game engine to create what i have in my head. My technical limitations,Game feel;Visual effects;Level design;Code structure;Project organization;Artificial intelligence,,,,Yes,
hobbyist,professional,never used,"The foundations of 2D & 3D Game Development through Godot. I want to be able to create a game without being infinite hours searching for how-tos.
Besides the technical aspects, making games is why I started studying Computer Science but I never put the energy needed into it because of fear of failure. My mind is set on overcoming it through this course and I hope we make it happen together!",Mapping ideas to Game Development concepts that I can work with.,Game feel;Visual effects;Code structure;Combat;Project organization;Maths for game programming,,,,Yes,A big thank you!
professional,completed games,personal projects,Additional insight into Godot features that aren't documented well.,Completing projects,Game feel;Platforming;Code structure;Project organization;Artificial intelligence,"Improvements to KinematicBody2D in Godot 3.1: platformer (tutorial)
https://youtu.be/YnvZNkQHcrI
GDquest content is normally fantastic, but this video is kind of odd.  There are multiple visual errors in the physics, and they aren't commented on in the video itself.  You can clearly see the character stuttering while going downhill and sliding on the platform, so I was a bit shocked that the video was released in this state.  I'd really love to see proper implementation of slopes in Godot 3.1, because the documentation is very poor.","Drawing in Viewport in Godot: Plugin Tutorial 1
https://youtu.be/nSqaIY-eJm0
I've liked many, many tutorials on GDquest, but here's one that stuck out a bit to me.  It covers a rather complex topic very clearly.  And it starts from the beginning, going through the code line by line.  Excellent content.","It doesn't happen often, but in some videos it can be difficult to understand the commentator's English.  This is usually because they are speaking quickly about technical things.  It may be helpful if very critical information is delivered a bit slower and with more emphasis.  Just a suggestion, of course.",Maybe,Thank you for taking the time to make this content!  GDquest has been incredibly helpful for learning techniques in Godot.
hobbyist,professional,personal projects,"Proper character controller management. Separation of concerns the ""Godot way."" Effective use of signals, globals, etc. for managing state and events.",UI creation. When and how to use signals. Avoiding coupling.,Game feel;Code structure;Combat;Project organization;UI/UX,Can't think of one I just straight up don't like.,"The visual shader tutorial, as I struggle with shader logic and the explanation helped.","Text versions of tutorials would be amazing when applicable, as seeking through a video can be tricky at times.",Maybe,Thank you for making such amazing content! ^.^
hobbyist,small programs,foundations,"Common game design techniques and practices, both Godot-specific and general.",Bridging the gap between the minutia and the big picture. Keeping track of all the pieces when complexity goes past trivial.,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Artificial intelligence,,,,Maybe,
hobbyist,foundations,I learned some foundations,,,Game feel;Platforming;Level design,,,,Yes,
student,small programs,personal projects,Better knowledge of Godot. Make a basement for my possible future metroidvania game,Make a good architecture at beginning which shouldn't be completely rewritten at later stages ,Game feel;Visual effects;Platforming;Level design;Code structure;Combat;Project organization;Artificial intelligence,,,,Yes,
hobbyist,small programs,foundations,More complex features and implementations past the basic's that are provided in most of the tutorials on you tube.,Time to put it all together and to keep my skill set's fresh. Vaguely documented functions that I'm not sure how to properly utilized. ,Game feel;Platforming;Code structure;Combat;Project organization;Team work;Maths for game programming,,,,Maybe,Not right now
hobbyist,professional,personal projects,I want to know how to make games with  good structure and better performance.,"When I turn on the shadow, the fps became half.",Visual effects;Code structure;Project organization,I am not good at English. Some lectures do not have English subtitle. Could you please enable it?,...,...,Maybe,...
hobbyist,small programs,foundations,"I'm just a hobbyist, so I already have joined every YouTube video of you, just to learn a little bit more. Also in this course: I don't expect something special, because there is still so much room for me to learn more ;-)","In general: Making games for mobile devices (the different screen sizes, the use the accelerator / gyroscope, building the bundle for iOS and Android). 
And an old dream: wish I could learn how to build a board game A.I. (but I think this is a very special topic for real pros)",Visual effects;Artificial intelligence;Maths for game programming,Videos about Krita isn't that important for me (but perhaps in a later period),"https://www.youtube.com/watch?v=EPa4HreEIWc
This was a realy big ""Aha"" effect for me (to understand the principles in general)","Nothing to grump in my eyes, there are fantastic made",Maybe,Thanks for your effort to make all of these videos and sharing your knowledge!
hobbyist,professional,foundations,"I am looking to get all best practices to be used in Godot for making full game. Most of video courses I've seen so far (from other creators), are struggling with typos, code inconsistency and very often parts had code refactored in between recordings, so for real understanding what’s going on was needed to jump back and forward between videos (what is extremely annoying). Since I already had purchased GD PRO 2D course (but had no time to go deep yet since I was heavily involved in quite big ERM system creation) I wish to start the new course knowing that I will not miss much ignoring my previous purchase =D And of course the main goal is to get from ground and up my game idea implemented after “absorbing” your course.","Optimized algorithms.. mainly mathematics (movement, vectoring). And - finishing :)",Visual effects;Code structure;Project organization;Artificial intelligence;Maths for game programming,"not at all, really",Since they all covering different but important subjects and the way authors put it (keeping clean well structured and error free explanations/examples) - for me all tutorials so far were having same high appeal. And it is perfect that inventor accepted new team members!,"Keep same quality level.. keep tutorials planned, structured and prepared",Yes,"Dont let woman voice (if you have any plans to get femines in team) to ruine videos. They are good for chit-chat, but never for information delivery (me personally had to abandon and refund, having such option, few courses on Udemy because of nerve-cutting intonations of some narrators)"
hobbyist,foundations,I learned some foundations,,,Game feel;Visual effects;Level design;Code structure;Audio;Combat;Project organization;Artificial intelligence;Maths for game programming,,,,Maybe,
hobbyist,professional,personal projects,A good foundation of the 2d capabilities of Godot so that I can leverage this when making my own projects,"Feature creep, scoping, unclear goals, inconsistent scheduling, lack of experience",Level design;Code structure;Audio;Project organization;Team work;Maths for game programming,"To be honest, I haven't worked through *all* of the tutorials, only the ones that teach something I'm interested in and I can't really think of any that I genuinely disliked. I think that's a good thing :)","Grid movement tutorials were how I actually found the GDquest channel in the first place, as that was something I was having trouble figuring out. It helped me do exactly what I needed and was presented in a clear and understandable manner.","Maybe give a few examples on how the techniques might be used in ""real"" projects, not just the one small abstract idea that is used for the tutorial. Might help spark creativity, who knows?",Maybe,I think all the GDquest tutorials are very well thought through and presented in an understandable and clear way
hobbyist,professional,personal projects,"a good strategy about data handling in godot for quite everything you need, lets say inventory or other game objects that also may need/or not need to be saved in to a savegame file.","Graphics and Animation, i'm more the coder",Code structure;Project organization;Artificial intelligence,,,"I like small learning parts, lets say about 15-20 min. about one special learning content. It's easier to conentrate on smaller blocks.",Yes,
hobbyist,small programs,foundations,,,Game feel;Code structure;Audio,,,,Yes,
professional,professional,foundations,I hope that I can learn to use GODOT in professional level,"- task management / delegation
- parallel asset creation
- task conflicts between team member
- asset pipeline
- asset optimization
- scalable project architecture
- polish level
- custom tools",Game feel;Visual effects;Code structure;Project organization;Team work,,,"I think you should split your tutorial to multiple user segment. It can be as simple as BEGINNER, INTERMEDIATE, and ADVANCED user. Then you can give guide to your students on how to ""level up"" to more advanced segment such as ""If you can complete this project, your level is advanced developer""",Yes,
hobbyist,professional,foundations,,Motivation / sticking to a project; i can quickly loose interest when i run into a problem i seemingly can't solve,Code structure;Project organization;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,foundations,I learned some foundations,"Sorry for the long text D:

Better mindset about programming and see a real game project made by zero. I feel hard to use what I learned in a practical way(like, I see the tutorial, write the code from the tuts, understand 'somehow' how it works, getting along the tuts) when I try to put in the my personal project, usually don't work or I can't imagine using it in my own code. 

And I'm a game music composer myself, and If there's some part of it, I wanted to know what Godot have to offer in the audio side, what effects can be tweaked, if there's a middleware that I can use to do this tweakings from third party apps.",I think I got this answer inside the previous question lol,Game feel;Platforming;Level design;Code structure;Audio;Combat;Project organization,I usually like the tutorials from You and Guilherme. I Don't really have a disliked content.,"I really like the videos that have sequence, like the make a 3D Maze in Godot or The Quest System Tutorial.","If there's time to do so, some tutorial AND project assignment by members, maybe? ",Yes,"Be kinder to us, I will try my best D:"
student,professional,finished game,Better praticts,User interface,Visual effects;Level design;Project organization;Maths for game programming,,,,Yes,
hobbyist,completed games,finished game,"To be honest I'm not interested in 2D Platform/Adventure at all. I just wanted to support your great work for the community. In terms of games I'm more interested in management / strategy games. With focus on replayablity, modability. ","Gui, Control Nodes.",Visual effects;Code structure;Audio;Project organization;Artificial intelligence;mod support,"Hard to remember, but I was expecting more from ""Overview of GLS2 in Godot 3.1"". The video didn't say much, just ""use it for mobile"", and ""it has different visual"", but not much details on what is actually different.","""Custom Nodes in G3.1: Class Name Keyword"" was quite informative. Being familiar with object oriented programing, benefits and usage of class_name in Godot was not obvious to me. I liked the video about Control Nodes as well. But i still struggle with those.","Make sure that all video creators use software that displays keys pressed in videos. This feature is underrated, and very informative. It is passively teaching key shortcuts.",No,Thank You for your great effort.
hobbyist,professional,finished game,Best practices. Useful shortcuts in editor. Plugin development. Reusable modules. Eliminating repetitive tasks. Automation.,Too big scope. ,Visual effects;Code structure;Project organization;Maths for game programming;New features of 3.1,No specific video. I do not like to watch someone typing code. Attached source is the best.,Showing the result of the tutorial at the beginning of the tutorial. Your other material is great. You share the starting point of the project and the end point at each tutorial level. Very useful.,Q&A maybe.,Maybe,Thank you. You are doing a great job.
student,completed games,personal projects,Make games (start to finish) with godot,"Tiles, sprites, state machine, logic between scripts",Game feel;Platforming;Level design;Code structure,,,,,
hobbyist,professional,personal projects,"It is always nice to see how other people approach a problem, especially with newer features.  I have been using Godot for several years and it is always really fun to see someone implement something using a ""new"" feature - often something that has been around for a while, but I failed to notice it or forgot about it.  I know you keep up with the latest and greatest features of the engine so it will be nice to see you implement these.

I should say that I also appreciate that you do things ""correctly"" when you do your videos.  I know there is a balance of risk, reward, resources, and time when designing and coding.  Given infinite time and resources, we would all do everything the most proper and bomb proof way possible.  But, I have recently seen some Godot YouTube videos where people are actually sharing sloppy/hackish ways of doing things.  To be honest, I would argue that many games have this to some extent, but I definitely would NOT show implementation details of those parts to others.  Especially knowing that lot of newer developers rely on YouTube videos to learn.",I would say self-promotion and marketing type stuff.  ,Project organization;Artificial intelligence;Maths for game programming,"To be honest, I can't say that I didn't like any of the tutorials.  They all have been meaningful in some way. ","I really liked the Finite State Machine videos because they implemented a lot of slides to give an overview before jumping in.  You also pulled out key elements of the code in some of the slides.  I feel that it re-enforced the idea of planning out, to an extent, something before actually jumping in and working on it.",I don't think there really is anything that needs improving.  You are doing great.,No,I answered 'no' to using assignments because I typically do that for myself anyways.  Keep up the good work =)
hobbyist,foundations,never used,How to create a mini game with tow levels and a boss level. The programing aspect is of great interest as I'm not a programer.,Programing mostly. Creating games that are fun and small to produce. Small so I can finish them but still be fun for others to play.,Level design;Code structure;Project organization,To be honest I have not watched the Godot courses yet but the Krita ones. ,From the Krita tutorials your explanations are easy to follow and give a lot of information.,,Maybe,
hobbyist,professional,personal projects,The best practices about game development,Overall architecture and assets,Game feel;Level design;Code structure,"I mostly pick videos when I am looking for specific information. I haven't been disappointed so far. Some videos are more aimed at beginning and I tend to skip those but I understand you need to educate a broader audience, and I sometimes learn something anyway.","https://www.youtube.com/watch?v=iamttSmxA2I

I like this one because it explains lighting in simple terms and I was able to visualize what all the parameters meant. It was very difficult to do so before with just the documentation",So far so good :),No,"I use GDQuest courses to help me develop a small game, but I wouldn't follow an entire course and do assignements. I pick videos depending on the current state of my game."
hobbyist,professional,personal projects,"Better project structure, efficient approaches","Understanding the ""game loop"" and how to trigger certain functions at certain times",Game feel;Visual effects;Code structure;Project organization;Maths for game programming,UI Containers. Not that it was bad! I think containers are just hard to grasp. Knowing how/when to use containers and how nesting them works.,Signals! Code examples and good detail on how/when to use them,Small examples that can be easily reproduced in a different code base as well as seeing how a different example could fit into a larger project. Those are some of the most useful examples and help me to understand the how/why/when of a particular technique.,Yes,"Thank you for the high quality content. It looks sharp, it's well organized, doesn't ramble, and is not a random ""on the fly"" tutorial where the creator makes mistakes. It's good to learn from mistakes and to learn how to debug, but perhaps not when we're learning a core concept."
hobbyist,professional,foundations,Insights into techniques and best practices for making games with Godot ,Not having enough time!,Game feel;Visual effects;Code structure;Project organization;Artificial intelligence,,I think that the videos produced by you (Nathan) are by far the best. Clearly explained and presented and with a high production quality.,Making short tutorials for individual features/techniques.,Maybe,Thanks for all your hard work :)
student,foundations,I learned some foundations,"make proper sense of the engine, understand the structure of the games made in it, learn some new tips and tricks for myself","kicking off. also trying to comprehend which piece goes where, how to organise game state, etc ",Game feel;Visual effects;Code structure;Combat;Project organization;Team work,,,,Maybe,
hobbyist,foundations,I learned some foundations,From basic knowledge to little bit advance,Lack of game example,Visual effects;Platforming;Code structure,none. All your video are short and informative ,Game graphic production tutorial. One of the best video sources on YT,"More game ""case studies"" would be great",Yes,1~2 video per week is ideal.
hobbyist,professional,never used,Godot basics and game design fundamentals.,Creativity and graphics,Game feel;Visual effects;Level design;Code structure;Combat,This will be my first time using one.,This will be my first time using one.,,Yes,Looking forward to it.  Thank you. :)
hobbyist,professional,personal projects,,,Code structure;Maths for game programming,,,,No,Thanks for the great work so far :)
hobbyist,completed games,foundations,"Strategies for making a mid-sized game, particularly how to structure it",Continuing after the initial excitement about a project/finishing a game,Level design;Code structure;Combat;Artificial intelligence;Maths for game programming,N/A,N/A,Haven't watched any yet,Yes,Looking forward to the course
hobbyist,professional,foundations,What are the best practises when it comes to game creation with Godot 3.1,"Lately I've been trying to implement good, snappy, pixel-perfect platformer movement. But more generally creating game mechanics that feel good. And sticking to an idea, but that's beside.",Game feel;Platforming;Code structure;Combat;Artificial intelligence,,,,Maybe,
hobbyist,small programs,personal projects,To learn better code practices and programming patterns,With keeping my projects organized to work for long time periods,Game feel;Visual effects;Platforming;Level design;Code structure;Audio;Combat;Project organization;Artificial intelligence;Maths for game programming,,,,Maybe,
hobbyist,small programs,personal projects,,"a) Lack of suitable docs and tutorials going really deep. b) Getting the stuff in my head into code. For example I tried to build a (very basic) dynamically generated landscape only with roads, a river and some land plots. The biggest struggle however was that available videos and stuff on the Internet was mostly about people showing their work but giving zero advice or did not reply.",Level design;Code structure;Artificial intelligence,,The tutorials on saving the game state were excellent. Why? It was a clearly defined topic which was explained not starting with the pure basics but nevertheless in detail and thorougly.,,Maybe,"Not sure whether I just missed it, but had there been an info on the new course via kickstarter round-mail for backers of the first? I noticed the second kickstarter was already open purely by luck.
I had to pause my Godot projects for a while and tried to get back in via your youtube videos. Having the available videos being structured (like for example the ones from Kickstarter course I) would help a lot!"
hobbyist,professional,never used,game programming patterns,get enough determination to finish it,Platforming;Code structure;Project organization;Artificial intelligence,,"Most of them, really. Are really well explained and you cover a lot of different stages of game development.",Sugested exercises,Yes,Keep it going!
student,foundations,never used,,,Game feel;Visual effects;Platforming;Level design;Code structure;Project organization,,,,Yes,
hobbyist,small programs,foundations,Good coding practice,"Interaction with AI, NPC, structuring character stats and inventory",Code structure;Artificial intelligence;saving and loading game and settings,"In the RPG demo, I could not manage to make the player continue the jumping animation while attacking. The player stop in the air to attack.",The one that deal with procedural generation because I haven't seen much of them for Godot. Also the one that explain saving and loading because it is necessary to master saving and loading to expend a project.,Focus on good coding practice that allow to easily add new features.,Yes,
hobbyist,professional,foundations,How to tie different pieces together into a coherent game.,Creating graphics,Game feel;Visual effects;Level design;Code structure;Project organization;Artificial intelligence;Maths for game programming,,,,Yes,
hobbyist,small programs,never used,,,,,,,,
